# ----------------------------
# Análisis de Señales con la FFT
# ----------------------------

import numpy as np
import matplotlib.pyplot as plt

# Parámetros generales
fs = 1000      # Frecuencia de muestreo (Hz)
T = 1          # Duración de la señal (segundos)
t = np.linspace(0, T, int(fs * T), endpoint=False)

# Definición de señales básicas
def pulso_rectangular(t, ancho_pulso=0.1):
    return np.where((t >= 0) & (t <= ancho_pulso), 1, 0)

def escalon(t):
    return np.where(t >= 0, 1, 0)

def seno(t, frecuencia=50):
    return np.sin(2 * np.pi * frecuencia * t)

# Función para aplicar la FFT
def transformada_fourier(señal, fs):
    N = len(señal)
    fft = np.fft.fft(señal)
    freqs = np.fft.fftfreq(N, d=1/fs)
    return np.fft.fftshift(fft), np.fft.fftshift(freqs)

# Generar señales
señal_pulso = pulso_rectangular(t)
señal_escalon = escalon(t)
señal_seno = seno(t)

# Calcular la FFT de cada señal
fft_pulso, freqs_pulso = transformada_fourier(señal_pulso, fs)
fft_escalon, freqs_escalon = transformada_fourier(señal_escalon, fs)
fft_seno, freqs_seno = transformada_fourier(señal_seno, fs)

# Visualización de señales en el dominio del tiempo
plt.figure(figsize=(10, 6))

plt.subplot(3, 1, 1)
plt.plot(t, señal_pulso)
plt.title('Pulso Rectangular')
plt.ylabel('Amplitud')

plt.subplot(3, 1, 2)
plt.plot(t, señal_escalon)
plt.title('Función Escalón')
plt.ylabel('Amplitud')

plt.subplot(3, 1, 3)
plt.plot(t, señal_seno)
plt.title('Señal Senoidal (50 Hz)')
plt.xlabel('Tiempo (s)')
plt.ylabel('Amplitud')

plt.tight_layout()
plt.show()

# Visualización del espectro de frecuencia (magnitud)
plt.figure(figsize=(10, 6))

plt.subplot(3, 1, 1)
plt.plot(freqs_pulso, np.abs(fft_pulso))
plt.title('Espectro del Pulso Rectangular')
plt.ylabel('Magnitud')

plt.subplot(3, 1, 2)
plt.plot(freqs_escalon, np.abs(fft_escalon))
plt.title('Espectro de la Función Escalón')
plt.ylabel('Magnitud')

plt.subplot(3, 1, 3)
plt.plot(freqs_seno, np.abs(fft_seno))
plt.title('Espectro de la Señal Senoidal (50 Hz)')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Magnitud')

plt.tight_layout()
plt.show()

# Verificar propiedad de desplazamiento en el tiempo
t_desplazada = t + 0.2
señal_seno_desplazada = seno(t_desplazada)
fft_seno_desp, freqs_seno_desp = transformada_fourier(señal_seno_desplazada, fs)

plt.figure(figsize=(10, 4))
plt.plot(freqs_seno, np.abs(fft_seno), label='Original')
plt.plot(freqs_seno_desp, np.abs(fft_seno_desp), label='Desplazada', linestyle='--')
plt.title('Comparación de Espectros (Seno vs Seno Desplazado)')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Magnitud')
plt.legend()
plt.grid()
plt.show()
